{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAIP,IAAMQ,EAAcC,SAASC,cAAc,SAC3CF,EAAYG,iBAAiB,UAAU,SAAAC,GACrCA,EAAEC,iBAOF,IALA,IAAMC,EAAW,IAAIC,SAASP,GACxBQ,EAAaC,SAASH,EAASI,IAAI,UACnCC,EAAYF,SAASH,EAASI,IAAI,SAClCE,EAASH,SAASH,EAASI,IAAI,WAE5BG,EAAI,EAAGA,EAAID,EAAQC,IAAK,CAG/BvB,EAFiBuB,EAAI,EACPL,EAAaK,EAAIF,GAE5BG,MAAK,SAAAC,GACJC,EAAA5B,GAAS6B,OAAOC,QACd,uBAA+CC,OAAtBJ,EAAOxB,SAAS,QAAmB4B,OAAbJ,EAAOvB,MAAM,M,IAG/D4B,OAAM,SAAAC,GACLL,EAAA5B,GAAS6B,OAAOK,QACd,sBAA2CH,OAArBE,EAAM9B,SAAS,QAAkB4B,OAAZE,EAAM7B,MAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst promiseForm = document.querySelector('.form');\npromiseForm.addEventListener('submit', e => {\n  e.preventDefault();\n\n  const formData = new FormData(promiseForm);\n  const firstDelay = parseInt(formData.get('delay'));\n  const delayStep = parseInt(formData.get('step'));\n  const amount = parseInt(formData.get('amount'));\n\n  for (let i = 0; i < amount; i++) {\n    const position = i + 1;\n    const delay = firstDelay + i * delayStep;\n    createPromise(position, delay)\n      .then(result => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${result.position} in ${result.delay}ms`\n        );\n      })\n      .catch(error => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${error.position} in ${error.delay}ms`\n        );\n      });\n  }\n});\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$promiseForm","document","querySelector","addEventListener","e","preventDefault","formData","FormData","firstDelay","parseInt","get","delayStep","amount","i","then","result","$parcel$interopDefault","Notify","success","concat","catch","error","failure"],"version":3,"file":"03-promises.db5d791c.js.map"}