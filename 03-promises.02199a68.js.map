{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIb,MAAMQ,EAAcC,SAASC,eAAe,eAC5CF,EAAYG,iBAAiB,UAAUC,MAAMC,IAC3CA,EAAEC,iBAEF,MAAMC,EAAW,IAAIC,SAASR,GACxBS,EAAaC,SAASH,EAASI,IAAI,UACnCC,EAAYF,SAASH,EAASI,IAAI,SAClCE,EAASH,SAASH,EAASI,IAAI,WAErC,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAQC,IAAK,CAC/B,MAAMvB,EAAWuB,EAAI,EACftB,EAAQiB,EAAaK,EAAIF,EAE/B,IACE,MAAMG,QAAezB,EAAcC,EAAUC,GAC7CwB,EAAA5B,GAAS6B,OAAOC,QACd,uBAAqBH,EAAIxB,eAAoBwB,EAAEvB,U,CAEjD,MAAO2B,GACPH,EAAA5B,GAAS6B,OAAOG,QACd,sBAAoBD,EAAE5B,eAAmB4B,EAAE3B,U","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst promiseForm = document.getElementById('promiseForm');\npromiseForm.addEventListener('submit', async e => {\n  e.preventDefault();\n\n  const formData = new FormData(promiseForm);\n  const firstDelay = parseInt(formData.get('delay'));\n  const delayStep = parseInt(formData.get('step'));\n  const amount = parseInt(formData.get('amount'));\n\n  for (let i = 0; i < amount; i++) {\n    const position = i + 1;\n    const delay = firstDelay + i * delayStep;\n\n    try {\n      const result = await createPromise(position, delay);\n      Notiflix.Notify.success(\n        `✅ Fulfilled promise ${result.position} in ${result.delay}ms`\n      );\n    } catch (error) {\n      Notiflix.Notify.failure(\n        `❌ Rejected promise ${error.position} in ${error.delay}ms`\n      );\n    }\n  }\n});\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$47d4ff9957288465$var$promiseForm","document","getElementById","addEventListener","async","e","preventDefault","formData","FormData","firstDelay","parseInt","get","delayStep","amount","i","result","$parcel$interopDefault","Notify","success","error","failure"],"version":3,"file":"03-promises.02199a68.js.map"}